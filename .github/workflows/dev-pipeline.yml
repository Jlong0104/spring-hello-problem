---
name: Dev CI Pipeline

"on":
  pull_request:
  push:
    branches:
      - 'feature/**'
    paths-ignore:
      - "**/*.md"

permissions:
  contents: read
  security-events: write

concurrency:
  group: dev-sec-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  JAVA_VERSION: '17'
  CHART_DIR: charts/java-app
  IMAGE_TAG: local/spring-hello-problem:${{ github.sha }}

jobs:
  unit-test:
    name: Build & Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Test
        run: mvn -B -DskipTests=false test
      - name: Package (no tests)
        run: mvn -B -DskipTests package
      - name: Archive surefire reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/target/surefire-reports/*.xml
            **/target/surefire-reports/*.txt

  codeql:
    name: CodeQL (Java SAST)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
      - uses: github/codeql-action/init@v3
        with:
          languages: java
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3
        with:
          category: '/language:java'

  secrets:
    name: Secrets Scan (Gitleaks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  iac:
    name: IaC/Helm/K8s Scan (Checkov)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Checkov → SARIF
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: .
          framework: helm,kubernetes,dockerfile
          output_format: sarif
          output_file_path: checkov-results.sarif
          soft_fail: false
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: checkov-results.sarif

  dep-scan:
    name: Dependency Vulnerabilities (OWASP)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
      - name: OWASP Dependency-Check → SARIF
        uses: dependency-check/Dependency-Check_Action@v4
        with:
          project: spring-hello-problem
          path: .
          format: 'SARIF'
          out: 'odc'
          args: >
            --scan . --enableRetired
            --failOnCVSS 7.0        # 7+ 直接失败，可按需调整
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: odc/dependency-check-report.sarif
      - uses: actions/upload-artifact@v4
        with:
          name: dependency-check-html
          path: odc/dependency-check-report.html
        if: always()

  image-scan:
    name: Container Image Scan (Trivy)
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build image (local, no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: ${{ env.IMAGE_TAG }}
      - name: Ensure image exists
        run: docker image inspect "${{ env.IMAGE_TAG }}" >/dev/null
      - name: Trivy scan → SARIF
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.IMAGE_TAG }}
          format: sarif
          output: trivy-image.sarif
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          exit-code: '0'
          hide-progress: false
        continue-on-error: true
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-image.sarif
      - name: Trivy gate (fail on HIGH/CRITICAL)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.IMAGE_TAG }}
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          exit-code: '0'
          format: 'table'
          hide-progress: false

  sbom:
    name: SBOM (Syft)
    runs-on: ubuntu-latest
    needs: image-scan
    steps:
      - uses: anchore/sbom-action@v0
        with:
          image: ${{ env.IMAGE_TAG }}
          format: spdx-json
          artifact-name: sbom-${{ github.sha }}.spdx.json

  helm-lint:
    name: Helm Lint & Template
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-helm@v3
        with:
          version: '3.12.0'
      - name: Lint
        run: |
          helm lint ${{ env.CHART_DIR }}
          helm dependency build ${{ env.CHART_DIR }}
      - name: Render templates
        run: |
          helm template dev ${{ env.CHART_DIR }} \
            --namespace spring-hello-problem \
            --set-string image.repository=local/placeholder \
            --set-string image.tag=${{ github.sha }} \
            -f ${{ env.CHART_DIR }}/values.yaml > rendered.yaml
      - uses: actions/upload-artifact@v4
        with:
          name: rendered-manifests
          path: rendered.yaml
