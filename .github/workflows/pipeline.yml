name: CI/CD Pipeline

on:
  push:
    branches:
      - "main"

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  IMAGE_NAME: spring-hello-problem

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  helm-validation:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Kind and Kubectl
        run: |
          # 下载并安装 Kind
          curl -Lo kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

          # 下载并安装 Kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Create Kind cluster
        run: kind create cluster

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.10.0'

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.10.0'

      - name: Set Helm chart path
        id: chart
        run: echo "CHART_PATH=./charts/java-app" >> $GITHUB_ENV

      - name: Helm lint
        run: helm lint ${{ env.CHART_PATH }}

      - name: Helm dry-run
        run: |
          IMAGE_TAG="${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          helm upgrade --install spring-hello-problem ${{ env.CHART_PATH }} \
          --dry-run \
          --debug \
          --set image.tag=${{ github.sha }} \
          --namespace spring-hello-problem
